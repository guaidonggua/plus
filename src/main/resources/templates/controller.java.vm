package $!{package.Controller};

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import lombok.AllArgsConstructor;
import com.plus.common.R;
import com.plus.utils.Func;
import org.springframework.web.bind.annotation.*;
import com.baomidou.mybatisplus.core.metadata.IPage;
import java.util.List;
import $!{package.Entity}.$!{entity};
#set($dto=$package.Entity.replace("entity","dto"))
import $!{dto}.$!{entity}DTO;

import $!{package.Service}.$!{table.serviceName};
#if($!{superControllerClassPackage})
import $!{superControllerClassPackage};
#end
#if(!$!{superEntityClass})
#end

/**
 * $!{table.comment} 控制器
 *
 * @author $!{author}
 * @since $!{date}
 */
@RestController
@AllArgsConstructor
@RequestMapping("$!{table.entityPath}")
@Api(description = "$!{table.comment}相关接口")
#if($!{superControllerClass})
public class $!{table.controllerName} extends $!{superControllerClass} {
#else
public class $!{table.controllerName} {
#end

	private $!{table.serviceName} $!{table.entityPath}Service;

	/**
	 * 详情
	 */
	@GetMapping("/detail")
	@ApiOperation(value = "详情", notes = "传入$!{table.entityPath}")
	public R<$!{entity}> detail($!{entity}DTO dto) {
		$!{entity} detail = $!{table.entityPath}Service.getOne(dto);
		return R.data(detail);
	}

	/**
	 * 分页 $!{table.comment}
	 */
	@GetMapping("/page")
	@ApiOperation(value = "分页", notes = "传入$!{table.entityPath}")
	public R<IPage<$!{entity}>> page($!{entity}DTO dto) {
		IPage<$!{entity}> pages = $!{table.entityPath}Service.page(dto);
		return R.data(pages);
	}
	/**
	 * 不分页 $!{table.comment}
	 */
	@GetMapping("/list")
	@ApiOperation(value = "不分页", notes = "传入$!{table.entityPath}")
	public R<List<$!{entity}>> list($!{entity}DTO dto) {
		List<$!{entity}> list = $!{table.entityPath}Service.list(dto);
		return R.data(list);
	}

	/**
	 * 新增 $!{table.comment}
	 */
	@PostMapping("/save")
	@ApiOperation(value = "新增", notes = "传入$!{table.entityPath}")
	public R save(@RequestBody $!{entity}DTO dto) {
		return R.data($!{table.entityPath}Service.save(dto));
	}

	/**
	 * 修改 $!{table.comment}
	 */
	@PutMapping("/update")
	@ApiOperation(value = "修改", notes = "传入$!{table.entityPath}")
	public R update(@RequestBody $!{entity}DTO dto) {
		return R.data($!{table.entityPath}Service.updateById(dto));
	}

	/**
	 * 删除 $!{table.comment}
	 */
	@DeleteMapping("/remove")
	@ApiOperation(value = "逻辑删除", notes = "传入ids")
	public R remove(@ApiParam(value = "主键集合", required = true) @RequestParam String ids) {
		return R.data($!{table.entityPath}Service.deleteLogic(Func.toIntList(ids)));
	}

}
